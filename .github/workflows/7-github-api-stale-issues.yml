name: 7. Stale Issues (GH API)

on:
  workflow_dispatch:
    inputs:
      days_threshold:
        description: 'Number of days before an issue is considered stale'
        required: true
        default: '90'
        type: string
  schedule:
    - cron: '50 23 * * *'

jobs:
  clean-stale-issues:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        name: Close issues older than 90 days as stale
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const now = Date.now();
            
            // Use input parameter if provided via workflow_dispatch, otherwise default to 90 days
            const daysThreshold = context.payload.inputs?.days_threshold ? parseInt(context.payload.inputs.days_threshold) : 90;
            const thresholdMs = daysThreshold * 24 * 60 * 60 * 1000;
            const cutoff = new Date(now - thresholdMs);
            
            console.log(`Using threshold of ${daysThreshold} days`);

            // Fetch all open issues (excluding PRs) and filter by created_at < cutoff
            const allOpenIssues = await github.paginate(github.rest.issues.listForRepo, {
              owner,
              repo,
              state: 'open',
              per_page: 100,
            });

            const staleIssues = allOpenIssues.filter(i => !i.pull_request && new Date(i.created_at) < cutoff);

            console.log(`Found ${staleIssues.length} open issue(s) older than ${daysThreshold} days (before ${cutoff.toISOString()}).`);

            for (const issue of staleIssues) {
              try {
                if (issue.locked) {
                  console.warn(`Skipping #${issue.number} because it is locked.`);
                  continue;
                }
                const body = [
                  'This issue has been automatically closed as stale.',
                  '',
                  `It has been open for more than ${daysThreshold} days without recent activity. `,
                  'If this was closed in error, please reopen or file a new issue with updated details.'
                ].join('\n');

                await github.rest.issues.createComment({ owner, repo, issue_number: issue.number, body });
                await github.rest.issues.update({ owner, repo, issue_number: issue.number, state: 'closed' });
                console.log(`Closed #${issue.number}: ${issue.title}`);
              } catch (err) {
                console.error(`Failed to close #${issue.number}:`, err);
              }
            }